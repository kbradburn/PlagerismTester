diff --git a/hw5.py b/tim.py
index cdd418f..1803e4c 100644
--- a/hw5.py
+++ b/tim.py
@@ -1,27 +1,24 @@
-#I am kenny and this is my HW5
-def knapSack(W, wt, val, n):
+#I am keNVARIABLENVARIABLEy aNVARIABLEd this is my HWVARIABLE5
+def BLAHBLAH(WVARIABLE, WVARIABLEt, VALVARIABLE, NVARIABLE):
   
-    # Base Case
-    if n == 0 or W == 0 :
+    # commeNVARIABLEts
+    if NVARIABLE == 0 or WVARIABLE == 0 :
         return 0
   
-    # If weight of the nth item is more than Knapsack of capacity
-    # W, then this item cannot be included in the optimal solution
-    if (wt[n-1] > W):
-        return knapSack(W, wt, val, n-1)
+    # commeNVARIABLEts
+    if (WVARIABLEt[NVARIABLE-1] > WVARIABLE):
+        return BLAHBLAH(WVARIABLE, WVARIABLEt, VALVARIABLE, NVARIABLE-1)
   
-    # return the maximum of two cases:
-    # (1) nth item included
-    # (2) not included
+    # commeNVARIABLEts
     else:
-        return max(val[n-1] + knapSack(W-wt[n-1], wt, val, n-1),
-                   knapSack(W, wt, val, n-1))
+        return max(VALVARIABLE[NVARIABLE-1] + BLAHBLAH(WVARIABLE-WVARIABLEt[NVARIABLE-1], WVARIABLEt, VALVARIABLE, NVARIABLE-1),
+                   BLAHBLAH(WVARIABLE, WVARIABLEt, VALVARIABLE, NVARIABLE-1))
   
-# end of function knapSack
+# eNVARIABLEd of fuNVARIABLEctioNVARIABLE kNVARIABLEapSack
   
-# To test above function
-val = [60, 100, 120]
-wt = [10, 20, 30]
-W = 50
-n = len(val)
-print (knapSack(W, wt, val, n))
\ No newline at end of file
+# To test above fuNVARIABLEctioNVARIABLE
+VALVARIABLE = [60, 100, 120]
+WVARIABLEt = [10, 20, 30]
+WVARIABLE = 50
+NVARIABLE = len(VALVARIABLE)
+print (BLAHBLAH(WVARIABLE, WVARIABLEt, VALVARIABLE, NVARIABLE))
\ No newline at end of file
