diff --git a/hw5.py b/cy.py
index cdd418f..224e9e8 100644
--- a/hw5.py
+++ b/cy.py
@@ -1,27 +1,18 @@
-#I am kenny and this is my HW5
-def knapSack(W, wt, val, n):
-  
-    # Base Case
+#This is My Project!!!
+
+def funnyValues(n,W,wt,val):
     if n == 0 or W == 0 :
         return 0
   
-    # If weight of the nth item is more than Knapsack of capacity
-    # W, then this item cannot be included in the optimal solution
     if (wt[n-1] > W):
-        return knapSack(W, wt, val, n-1)
-  
-    # return the maximum of two cases:
-    # (1) nth item included
-    # (2) not included
-    else:
-        return max(val[n-1] + knapSack(W-wt[n-1], wt, val, n-1),
-                   knapSack(W, wt, val, n-1))
-  
-# end of function knapSack
+        return funnyValues(n-1, W, wt, val) 
+    else:                               
+        return max(val[n-1] + funnyValues(n-1,W-wt[n-1],wt,val),
+                   funnyValues(n-1,W,wt,val))
   
-# To test above function
-val = [60, 100, 120]
-wt = [10, 20, 30]
+#initializing in main
+val = [60, 120, 100]
+wt = [20, 30, 10]
 W = 50
 n = len(val)
-print (knapSack(W, wt, val, n))
\ No newline at end of file
+print (funnyValues(n, W, wt, val))
\ No newline at end of file
